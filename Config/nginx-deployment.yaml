apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        imagePullPolicy: Always
        image: nginx:1.24.0
        volumeMounts:
        - name: data-volume
          mountPath: /data
        - name: nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
        resources:
          limits:
            cpu: "150m"
            memory: "256Mi"
          requests:
            cpu: "100m"
            memory: "128Mi"
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
        envFrom:
        - configMapRef:
            name: nginx-configmap
        - configMapRef:
            name: nginx-conf
        # env:
        #   - name: COMPANY
        #     value: NFQ
        ports:
        - containerPort: 80
      - name: sidecar
        image: busybox
        args: [/bin/sh, -c, 'tail -n+1 -F /data/nginx/access.log']
        volumeMounts:
        - name: data-volume
          mountPath: /data
        resources:
          limits:
            cpu: "150m"
            memory: "256Mi"
          requests:
            cpu: "100m"
            memory: "128Mi"
      initContainers:
      - name: init-container
        image: busybox
        args: [/bin/sh, -c, 'mkdir -p /data/nginx']
        volumeMounts:
        - name: data-volume
          mountPath: /data
      volumes:
      - name: data-volume
        hostPath:
          path: /lab2/volume
          type: Directory
      - name: config-volume
        configMap:
          name: nginx-configmap
      - name: nginx-conf
        configMap:
          name: nginx-conf
